// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/service.go
//
// Generated by this command:
//
//	mockgen -source=internal/service/service.go -destination=mocks/service.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	service "github.com/flew1x/url_shortener_ms/internal/service"
	gomock "go.uber.org/mock/gomock"
)

// MockIService is a mock of IService interface.
type MockIService struct {
	ctrl     *gomock.Controller
	recorder *MockIServiceMockRecorder
}

// MockIServiceMockRecorder is the mock recorder for MockIService.
type MockIServiceMockRecorder struct {
	mock *MockIService
}

// NewMockIService creates a new mock instance.
func NewMockIService(ctrl *gomock.Controller) *MockIService {
	mock := &MockIService{ctrl: ctrl}
	mock.recorder = &MockIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIService) EXPECT() *MockIServiceMockRecorder {
	return m.recorder
}

// GetUrlShortener mocks base method.
func (m *MockIService) GetUrlShortener() service.IURLService {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlShortener")
	ret0, _ := ret[0].(service.IURLService)
	return ret0
}

// GetUrlShortener indicates an expected call of GetUrlShortener.
func (mr *MockIServiceMockRecorder) GetUrlShortener() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlShortener", reflect.TypeOf((*MockIService)(nil).GetUrlShortener))
}
