// Code generated by MockGen. DO NOT EDIT.
// Source: internal/entity/url.go
//
// Generated by this command:
//
//	mockgen -source=internal/entity/url.go -destination=mocks/url.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockIURL is a mock of IURL interface.
type MockIURL struct {
	ctrl     *gomock.Controller
	recorder *MockIURLMockRecorder
}

// MockIURLMockRecorder is the mock recorder for MockIURL.
type MockIURLMockRecorder struct {
	mock *MockIURL
}

// NewMockIURL creates a new mock instance.
func NewMockIURL(ctrl *gomock.Controller) *MockIURL {
	mock := &MockIURL{ctrl: ctrl}
	mock.recorder = &MockIURLMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIURL) EXPECT() *MockIURLMockRecorder {
	return m.recorder
}

// GetCreatedAt mocks base method.
func (m *MockIURL) GetCreatedAt() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCreatedAt")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetCreatedAt indicates an expected call of GetCreatedAt.
func (mr *MockIURLMockRecorder) GetCreatedAt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCreatedAt", reflect.TypeOf((*MockIURL)(nil).GetCreatedAt))
}

// GetOrigin mocks base method.
func (m *MockIURL) GetOrigin() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrigin")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetOrigin indicates an expected call of GetOrigin.
func (mr *MockIURLMockRecorder) GetOrigin() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrigin", reflect.TypeOf((*MockIURL)(nil).GetOrigin))
}

// GetShort mocks base method.
func (m *MockIURL) GetShort() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShort")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetShort indicates an expected call of GetShort.
func (mr *MockIURLMockRecorder) GetShort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShort", reflect.TypeOf((*MockIURL)(nil).GetShort))
}
