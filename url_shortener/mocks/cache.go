// Code generated by MockGen. DO NOT EDIT.
// Source: internal/cache/cache.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	cache "github.com/flew1x/url_shortener_ms/internal/cache"
	gomock "github.com/golang/mock/gomock"
)

// MockICache is a mock of ICache interface.
type MockICache struct {
	ctrl     *gomock.Controller
	recorder *MockICacheMockRecorder
}

// MockICacheMockRecorder is the mock recorder for MockICache.
type MockICacheMockRecorder struct {
	mock *MockICache
}

// NewMockICache creates a new mock instance.
func NewMockICache(ctrl *gomock.Controller) *MockICache {
	mock := &MockICache{ctrl: ctrl}
	mock.recorder = &MockICacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICache) EXPECT() *MockICacheMockRecorder {
	return m.recorder
}

// GetUrlCache mocks base method.
func (m *MockICache) GetUrlCache() cache.IUrlCache {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlCache")
	ret0, _ := ret[0].(cache.IUrlCache)
	return ret0
}

// GetUrlCache indicates an expected call of GetUrlCache.
func (mr *MockICacheMockRecorder) GetUrlCache() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlCache", reflect.TypeOf((*MockICache)(nil).GetUrlCache))
}
