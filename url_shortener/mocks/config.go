// Code generated by MockGen. DO NOT EDIT.
// Source: internal/config/config.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	config "github.com/flew1x/url_shortener_ms/internal/config"
	gomock "github.com/golang/mock/gomock"
)

// MockIConfig is a mock of IConfig interface.
type MockIConfig struct {
	ctrl     *gomock.Controller
	recorder *MockIConfigMockRecorder
}

// MockIConfigMockRecorder is the mock recorder for MockIConfig.
type MockIConfigMockRecorder struct {
	mock *MockIConfig
}

// NewMockIConfig creates a new mock instance.
func NewMockIConfig(ctrl *gomock.Controller) *MockIConfig {
	mock := &MockIConfig{ctrl: ctrl}
	mock.recorder = &MockIConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIConfig) EXPECT() *MockIConfigMockRecorder {
	return m.recorder
}

// GetLoggerConfig mocks base method.
func (m *MockIConfig) GetLoggerConfig() config.ILoggerConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoggerConfig")
	ret0, _ := ret[0].(config.ILoggerConfig)
	return ret0
}

// GetLoggerConfig indicates an expected call of GetLoggerConfig.
func (mr *MockIConfigMockRecorder) GetLoggerConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoggerConfig", reflect.TypeOf((*MockIConfig)(nil).GetLoggerConfig))
}

// GetMongoConfig mocks base method.
func (m *MockIConfig) GetMongoConfig() config.IMongoConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMongoConfig")
	ret0, _ := ret[0].(config.IMongoConfig)
	return ret0
}

// GetMongoConfig indicates an expected call of GetMongoConfig.
func (mr *MockIConfigMockRecorder) GetMongoConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMongoConfig", reflect.TypeOf((*MockIConfig)(nil).GetMongoConfig))
}

// GetRedisConfig mocks base method.
func (m *MockIConfig) GetRedisConfig() config.IRedisConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRedisConfig")
	ret0, _ := ret[0].(config.IRedisConfig)
	return ret0
}

// GetRedisConfig indicates an expected call of GetRedisConfig.
func (mr *MockIConfigMockRecorder) GetRedisConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRedisConfig", reflect.TypeOf((*MockIConfig)(nil).GetRedisConfig))
}

// GetServerConfig mocks base method.
func (m *MockIConfig) GetServerConfig() config.IServerConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServerConfig")
	ret0, _ := ret[0].(config.IServerConfig)
	return ret0
}

// GetServerConfig indicates an expected call of GetServerConfig.
func (mr *MockIConfigMockRecorder) GetServerConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServerConfig", reflect.TypeOf((*MockIConfig)(nil).GetServerConfig))
}

// GetUrlConfig mocks base method.
func (m *MockIConfig) GetUrlConfig() config.IUrlConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlConfig")
	ret0, _ := ret[0].(config.IUrlConfig)
	return ret0
}

// GetUrlConfig indicates an expected call of GetUrlConfig.
func (mr *MockIConfigMockRecorder) GetUrlConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlConfig", reflect.TypeOf((*MockIConfig)(nil).GetUrlConfig))
}

// InitConfig mocks base method.
func (m *MockIConfig) InitConfig(configPath, configFile string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InitConfig", configPath, configFile)
}

// InitConfig indicates an expected call of InitConfig.
func (mr *MockIConfigMockRecorder) InitConfig(configPath, configFile interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitConfig", reflect.TypeOf((*MockIConfig)(nil).InitConfig), configPath, configFile)
}
