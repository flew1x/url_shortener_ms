// Code generated by MockGen. DO NOT EDIT.
// Source: internal/config/redis_config.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRedisConfig is a mock of IRedisConfig interface.
type MockIRedisConfig struct {
	ctrl     *gomock.Controller
	recorder *MockIRedisConfigMockRecorder
}

// MockIRedisConfigMockRecorder is the mock recorder for MockIRedisConfig.
type MockIRedisConfigMockRecorder struct {
	mock *MockIRedisConfig
}

// NewMockIRedisConfig creates a new mock instance.
func NewMockIRedisConfig(ctrl *gomock.Controller) *MockIRedisConfig {
	mock := &MockIRedisConfig{ctrl: ctrl}
	mock.recorder = &MockIRedisConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRedisConfig) EXPECT() *MockIRedisConfigMockRecorder {
	return m.recorder
}

// GetRedisHost mocks base method.
func (m *MockIRedisConfig) GetRedisHost() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRedisHost")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRedisHost indicates an expected call of GetRedisHost.
func (mr *MockIRedisConfigMockRecorder) GetRedisHost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRedisHost", reflect.TypeOf((*MockIRedisConfig)(nil).GetRedisHost))
}

// GetRedisPassword mocks base method.
func (m *MockIRedisConfig) GetRedisPassword() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRedisPassword")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRedisPassword indicates an expected call of GetRedisPassword.
func (mr *MockIRedisConfigMockRecorder) GetRedisPassword() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRedisPassword", reflect.TypeOf((*MockIRedisConfig)(nil).GetRedisPassword))
}

// GetRedisPort mocks base method.
func (m *MockIRedisConfig) GetRedisPort() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRedisPort")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRedisPort indicates an expected call of GetRedisPort.
func (mr *MockIRedisConfigMockRecorder) GetRedisPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRedisPort", reflect.TypeOf((*MockIRedisConfig)(nil).GetRedisPort))
}

// GetRedisUrlDB mocks base method.
func (m *MockIRedisConfig) GetRedisUrlDB() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRedisUrlDB")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetRedisUrlDB indicates an expected call of GetRedisUrlDB.
func (mr *MockIRedisConfigMockRecorder) GetRedisUrlDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRedisUrlDB", reflect.TypeOf((*MockIRedisConfig)(nil).GetRedisUrlDB))
}
