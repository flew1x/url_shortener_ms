// Code generated by MockGen. DO NOT EDIT.
// Source: internal/config/server_config.go
//
// Generated by this command:
//
//	mockgen -source=internal/config/server_config.go -destination=mocks/server_config.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIServerConfig is a mock of IServerConfig interface.
type MockIServerConfig struct {
	ctrl     *gomock.Controller
	recorder *MockIServerConfigMockRecorder
}

// MockIServerConfigMockRecorder is the mock recorder for MockIServerConfig.
type MockIServerConfigMockRecorder struct {
	mock *MockIServerConfig
}

// NewMockIServerConfig creates a new mock instance.
func NewMockIServerConfig(ctrl *gomock.Controller) *MockIServerConfig {
	mock := &MockIServerConfig{ctrl: ctrl}
	mock.recorder = &MockIServerConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIServerConfig) EXPECT() *MockIServerConfigMockRecorder {
	return m.recorder
}

// GetBindIP mocks base method.
func (m *MockIServerConfig) GetBindIP() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBindIP")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBindIP indicates an expected call of GetBindIP.
func (mr *MockIServerConfigMockRecorder) GetBindIP() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBindIP", reflect.TypeOf((*MockIServerConfig)(nil).GetBindIP))
}

// GetLimitPerSecond mocks base method.
func (m *MockIServerConfig) GetLimitPerSecond() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLimitPerSecond")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetLimitPerSecond indicates an expected call of GetLimitPerSecond.
func (mr *MockIServerConfigMockRecorder) GetLimitPerSecond() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLimitPerSecond", reflect.TypeOf((*MockIServerConfig)(nil).GetLimitPerSecond))
}

// GetPort mocks base method.
func (m *MockIServerConfig) GetPort() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPort")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPort indicates an expected call of GetPort.
func (mr *MockIServerConfigMockRecorder) GetPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPort", reflect.TypeOf((*MockIServerConfig)(nil).GetPort))
}

// GetScheme mocks base method.
func (m *MockIServerConfig) GetScheme() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScheme")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetScheme indicates an expected call of GetScheme.
func (mr *MockIServerConfigMockRecorder) GetScheme() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScheme", reflect.TypeOf((*MockIServerConfig)(nil).GetScheme))
}
